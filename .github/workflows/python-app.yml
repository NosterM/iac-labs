# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3
      with:
         vitrualenvs-create: true
         vitrualenvs-in-project: true
                          

    - name: Install dependencies
      run: |
       poetry install --no-root
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
        
  Lint:
    runs-on: ubuntu-latest
    concurrency:
      group: analysis
    needs: build
    
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3
      with:
         vitrualenvs-create: true
         vitrualenvs-in-project: true

    - name: Load cache
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
       
    - name: Lint with flake8
      run: |
        source $VENV poetry run task lint
        
   
        
  Fotmatter:
    runs-on: ubuntu-latest
    concurrency:
      group: analysis
    needs: build
      
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3
      with:
         vitrualenvs-create: true
         vitrualenvs-in-project: true

    - name: Load cache
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
   
    - name: Formatter
      run: |
        source $VENV poetry run task formatter
    
        
  seccurity:
    runs-on: ubuntu-latest
    concurrency:
      group: analysis
    needs: build
    
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3
      with:
         vitrualenvs-create: true
         vitrualenvs-in-project: true

    - name: Load cache
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
        
    - name: Security
      run: |
        source $VENV poetry run task security
   
        
  unittestes:
    runs-on: ubuntu-latest
    needs: [Lint,Fotmatter,seccurity]
    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.3
      with:
         vitrualenvs-create: true
         vitrualenvs-in-project: true

    - name: Load cache
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/iac-labs/iac-labs/example-app/.venv
        key: ${{ runner.os }}-venv
    
    - name: Test with pytest
      run: |
        source $VENV poetry run task test
        
